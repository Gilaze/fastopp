# FastOpp Environment Configuration Example
# Copy this file to .env and update the values for your environment
#
# QUICK START:
# 1. Copy this file: cp example.env .env
# 2. Generate a secret key: uv run python oppman.py secrets
# 3. Copy the generated SECRET_KEY line into your .env file
# 4. Start the app: uv run python main.py
# 5. Visit /oppman/emergency to create your first admin user (this will create the database tables)
#
# REQUIRED SETTINGS:
# - SECRET_KEY: Used for session management and JWT tokens
# - DATABASE_URL: Database connection string (required for emergency access to work)
#
# OPTIONAL SETTINGS:
# - All other settings have sensible defaults
# - Uncomment and modify only what you need

# =============================================================================
# REQUIRED SETTINGS
# =============================================================================

# Secret key for session management and JWT tokens
# Generate a secure random key for production
# You can use: uv run python oppman.py secrets
SECRET_KEY=your_secret_key_here_change_in_production

# Database URL for SQLAlchemy
# For SQLite (default development):
# Note: The database file will be created automatically, but the URL must be set
DATABASE_URL=sqlite+aiosqlite:///./test.db

# =============================================================================
# OPTIONAL SECURITY SETTINGS
# =============================================================================

# Enable emergency access for password recovery
# Set to true to enable /oppman/emergency route
# WARNING: Only enable this temporarily for password recovery
EMERGENCY_ACCESS_ENABLED=false

# =============================================================================
# OPTIONAL DATABASE SETTINGS
# =============================================================================

# For PostgreSQL with asyncpg driver (production/testing):
# Uses asyncpg driver for async operations - no additional packages needed
# DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/fastopp

# For MySQL (production):
# DATABASE_URL=mysql+pymysql://username:password@localhost:3306/fastopp

# =============================================================================
# OPTIONAL AUTHENTICATION SETTINGS
# =============================================================================

# JWT token expiration time in minutes (default: 30)
# ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# OPTIONAL APPLICATION SETTINGS
# =============================================================================

# Debug mode (default: false)
# DEBUG=true

# Environment (default: development)
# ENVIRONMENT=development

# =============================================================================
# OPTIONAL SERVER SETTINGS
# =============================================================================

# Host to bind to (default: 0.0.0.0)
# HOST=0.0.0.0

# Port to run on (default: 8000)
# PORT=8000

# CORS origins (comma-separated)
# CORS_ORIGINS=http://localhost:3000,http://localhost:8000


# =============================================================================
# OPTIONAL FILE UPLOAD SETTINGS
# =============================================================================

# Upload directory (default: static/uploads)
# UPLOAD_DIR=static/uploads

# =============================================================================
# OPTIONAL API KEYS
# =============================================================================

# OpenRouter API key for LLM access
# OPENROUTER_API_KEY=your_openrouter_api_key_here

# OpenAI API key (alternative to OpenRouter)
# OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique secrets for production
# 3. Regularly rotate your SECRET_KEY and JWT_SECRET
# 4. Set EMERGENCY_ACCESS_ENABLED=false in production after setup
# 5. Use environment-specific values for different deployments
# 6. Consider using a secrets management service for production
